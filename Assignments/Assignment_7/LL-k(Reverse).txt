import java.util.*;

class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        next = null;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int N = scanner.nextInt();
        int K = scanner.nextInt();

        Node head = null;
        Node tail = null;

        for (int i = 0; i < N; i++) {
            int data = scanner.nextInt();
            Node newNode = new Node(data);
            if (head == null) {
                head = tail = newNode;
            } else {
                tail.next = newNode;
                tail = tail.next;
            }
        }

        head = reverseKNodes(head, K);
        printLinkedList(head);
    }

    private static Node reverseKNodes(Node head, int K) {
        if (head == null || K <= 1) {
            return head;
        }

        int count = 0;
        Node current = head;
        Node prev = null;
        Node next = null;

        // Reverse first K nodes of the linked list
        while (count < K && current != null) {
            next = current.next;
            current.next = prev;
            prev = current;
            current = next;
            count++;
        }

        // Recursively call for the rest of the list
        if (next != null) {
            head.next = reverseKNodes(next, K);
        }

        return prev;
    }

    private static void printLinkedList(Node head) {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
    }
}